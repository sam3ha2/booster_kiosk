name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Create config files and set env
        run: |
          echo "Decoding and creating .env file..."
          $encodedContent = "${{ secrets.ENV_FILE }}"
          $decodedBytes = [System.Convert]::FromBase64String($encodedContent)
          $decodedText = [System.Text.Encoding]::UTF8.GetString($decodedBytes)
          $decodedText | Out-File -FilePath .env -Encoding UTF8
          echo ".env file created"

          echo "Decoding and creating .env.development file..."
          $encodedDevContent = "${{ secrets.ENV_DEV_FILE }}"
          $decodedDevBytes = [System.Convert]::FromBase64String($encodedDevContent)
          $decodedDevText = [System.Text.Encoding]::UTF8.GetString($decodedDevBytes)
          $decodedDevText | Out-File -FilePath .env.development -Encoding UTF8
          echo ".env.development file created"

          echo "Decoding and creating .env.production file..."
          $encodedProdContent = "${{ secrets.ENV_PROD_FILE }}"
          $decodedProdBytes = [System.Convert]::FromBase64String($encodedProdContent)
          $decodedProdText = [System.Text.Encoding]::UTF8.GetString($decodedProdBytes)
          $decodedProdText | Out-File -FilePath .env.production -Encoding UTF8
          echo ".env.production file created"

          echo "Reading GH_TOKEN..."
          $envContent = Get-Content .env
          $GH_TOKEN = ($envContent | Select-String "GH_TOKEN=(.*)").Matches.Groups[1].Value
          echo "Setting GH_TOKEN to environment"
          echo "GH_TOKEN=$GH_TOKEN" >> $env:GITHUB_ENV
          echo "Environment variables set"
        shell: pwsh

      - name: Install dependencies
        run: npm ci

      - name: Build Vite
        run: npm run build

      - name: Build and publish Electron
        env:
          GH_TOKEN: ${{ env.GH_TOKEN }}
          NODE_ENV: production
        run: npm run deploy
